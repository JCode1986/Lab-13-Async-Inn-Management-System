// <auto-generated />
using System;
using Async_Inn.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Async_Inn.Migrations
{
    [DbContext(typeof(Async_InnDbContext))]
    [Migration("20200410064501_added-hotel-room-data")]
    partial class addedhotelroomdata
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Async_Inn.Data.Models.Hotel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Hotels");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            City = "Seattle",
                            Name = "Hotel1",
                            Phone = "123456789",
                            State = "Washington",
                            StreetAddress = "188 Amazing Lane"
                        },
                        new
                        {
                            ID = 2,
                            City = "Seattle",
                            Name = "Hotel2",
                            Phone = "987654321",
                            State = "Washington",
                            StreetAddress = "1024326 Yes Lane"
                        },
                        new
                        {
                            ID = 3,
                            City = "Seattle",
                            Name = "Hotel3",
                            Phone = "187654329",
                            State = "Washington",
                            StreetAddress = "22343 Leaf Drive"
                        },
                        new
                        {
                            ID = 4,
                            City = "Seattle",
                            Name = "Hotel4",
                            Phone = "176954328",
                            State = "Washington",
                            StreetAddress = "4434 No Street"
                        },
                        new
                        {
                            ID = 5,
                            City = "Seattle",
                            Name = "Hotel5",
                            Phone = "769815432",
                            State = "Washington",
                            StreetAddress = "3343 Street MCgee"
                        });
                });

            modelBuilder.Entity("Async_Inn.Models.Amenities", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Amenities");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "cake"
                        },
                        new
                        {
                            ID = 2,
                            Name = "phone"
                        },
                        new
                        {
                            ID = 3,
                            Name = "TV"
                        },
                        new
                        {
                            ID = 4,
                            Name = "Coffee maker"
                        },
                        new
                        {
                            ID = 5,
                            Name = "bed"
                        });
                });

            modelBuilder.Entity("Async_Inn.Models.HotelRoom", b =>
                {
                    b.Property<int>("HotelID")
                        .HasColumnType("int");

                    b.Property<int>("RoomNumber")
                        .HasColumnType("int");

                    b.Property<bool>("PetFriendly")
                        .HasColumnType("bit");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RoomID")
                        .HasColumnType("int");

                    b.HasKey("HotelID", "RoomNumber");

                    b.HasIndex("RoomID");

                    b.ToTable("HotelRooms");

                    b.HasData(
                        new
                        {
                            HotelID = 1,
                            RoomNumber = 123,
                            PetFriendly = true,
                            Rate = 120m,
                            RoomID = 1
                        },
                        new
                        {
                            HotelID = 2,
                            RoomNumber = 220,
                            PetFriendly = false,
                            Rate = 150m,
                            RoomID = 1
                        },
                        new
                        {
                            HotelID = 1,
                            RoomNumber = 101,
                            PetFriendly = false,
                            Rate = 75m,
                            RoomID = 2
                        },
                        new
                        {
                            HotelID = 2,
                            RoomNumber = 111,
                            PetFriendly = true,
                            Rate = 175m,
                            RoomID = 2
                        });
                });

            modelBuilder.Entity("Async_Inn.Models.Room", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Layout")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Layout = 0,
                            Name = "things"
                        },
                        new
                        {
                            ID = 2,
                            Layout = 0,
                            Name = "things"
                        },
                        new
                        {
                            ID = 3,
                            Layout = 0,
                            Name = "things"
                        },
                        new
                        {
                            ID = 4,
                            Layout = 0,
                            Name = "things"
                        },
                        new
                        {
                            ID = 5,
                            Layout = 0,
                            Name = "things"
                        },
                        new
                        {
                            ID = 6,
                            Layout = 0,
                            Name = "things"
                        });
                });

            modelBuilder.Entity("Async_Inn.Models.RoomAmenities", b =>
                {
                    b.Property<string>("AmenitiesID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("RoomID")
                        .HasColumnType("int");

                    b.Property<int?>("AmenitiesID1")
                        .HasColumnType("int");

                    b.HasKey("AmenitiesID", "RoomID");

                    b.HasIndex("AmenitiesID1");

                    b.HasIndex("RoomID");

                    b.ToTable("RoomAmenities");
                });

            modelBuilder.Entity("Async_Inn.Models.HotelRoom", b =>
                {
                    b.HasOne("Async_Inn.Data.Models.Hotel", "Hotel")
                        .WithMany("HotelRooms")
                        .HasForeignKey("HotelID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Async_Inn.Models.Room", "Room")
                        .WithMany("HotelRooms")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Async_Inn.Models.RoomAmenities", b =>
                {
                    b.HasOne("Async_Inn.Models.Amenities", "Amenities")
                        .WithMany("RoomAmenities")
                        .HasForeignKey("AmenitiesID1");

                    b.HasOne("Async_Inn.Models.Room", "Room")
                        .WithMany("RoomAmenities")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
